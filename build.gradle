group 'com.parser'
version '1.0-SNAPSHOT'

apply plugin: 'war'

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    compile 'org.jsoup:jsoup:1.10.1'
    compile 'org.seleniumhq.selenium:selenium-java:3.0.1'
    compile 'org.seleniumhq.selenium:selenium-server:3.0.1'
    compile 'org.seleniumhq.selenium:selenium-api:3.0.1'

    compile 'com.fasterxml.jackson.core:jackson-core:2.8.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.1'

    compile 'org.springframework:spring-webmvc:4.3.3.RELEASE'
    compile 'org.springframework:spring-web:4.3.3.RELEASE'
    compile 'org.springframework:spring-core:4.3.3.RELEASE'
    compile 'org.springframework:spring-context:4.3.3.RELEASE'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet:jstl:1.2'

    compile 'com.github.jsimone:webapp-runner:8.0.30.2'

}


task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)